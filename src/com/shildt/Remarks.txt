//*****************************************************************************************


                          if (НЕ ЗНАЛ || ЗАБЫЛ :) {
                            remember();
                            mustKnow();
                          }


+ Абстрактный класс унаследованный от интерфейса не обязан реализовывать методы интерфейса

+ Коллекции могут содержать только ссылки, а не значения примитивных типов.



//*********************** Класс Object ********************************************

// 1. Object clone() -                  Создает новый объект, не отличающийся от клонируемого
// 2. boolean equals(Object object) -   Определяет, равен ли один объект другому
// 3. void finalize() -                 Вызывается перед удалением неиспользуемого объекта
// 4. Class<?> getClass() -             Получает класс объекта во время выполнения
// 5. int hashCode() -                  Возвращает хеш-код, связанный с вызывающим объектом
// 6. void notify() -                   Возобновляет исполнение потока, ожидающего вызывающего объекта
// 7. notifyAll() -                     Возобновляет исполнение всех потоков, ожидающих вызывающего объекта
// 8. String toString() -               Возвращает символьную строку, описывающую объект
// 9. void wait() -                     Ожидает другого потока исполнения

//*********************** Интерфейсы коллекций ********************************************

--------------------------------------------------------------------------------------
Collection     |    Позволяет работать с группами объектов. Находится на
               |    вершине иерархии коллекций.
--------------------------------------------------------------------------------------
Deque          |    Расширяет интерфейс Queue для организации двухсторонних очередей.
--------------------------------------------------------------------------------------
List           |    Расширяет интерфейс Collection для управления последовательностями
               |    (списками объектов)
--------------------------------------------------------------------------------------
NavigableSet   |    Расширяет интерфейс SortedSet для извлечения элементов по
               |    результатам поиска ближайшего совпадения
--------------------------------------------------------------------------------------
Queue          |    Расширяет интерфейс Collection для управления специальными типами
               |    списков, где элементы удаляются только из начала списка
--------------------------------------------------------------------------------------
Set            |    Расширяет интерфейс Collection для управления множествами, которые
               |    должны содержать однозначные элементы
--------------------------------------------------------------------------------------
SortedSet      |    Расширяет интерфейс Set для управления отсортированными множествами
--------------------------------------------------------------------------------------

//*********************** Базовые классы коллекций ********************************************

 1. AbstractCollection
 2. AbstracktList
 3. AbstracktQueue
 4. AbstracktSequentaList
 5. LinkedList
 6. ArrayList
 7. ArrayDeque
 8. AbstracktSet
 9. EnumSet
10. HashSet
11. LinkedHeashSet
12. PriorityQueue
13. TreeSet

//***********************
